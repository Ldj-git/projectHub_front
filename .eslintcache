[{"C:\\Users\\Ldj\\Desktop\\projectHub_front\\src\\index.js":"1","C:\\Users\\Ldj\\Desktop\\projectHub_front\\src\\App.js":"2","C:\\Users\\Ldj\\Desktop\\projectHub_front\\src\\reportWebVitals.js":"3","C:\\Users\\Ldj\\Desktop\\projectHub_front\\src\\_reducers\\index.js":"4","C:\\Users\\Ldj\\Desktop\\projectHub_front\\src\\components\\views\\LandingPage\\LandingPage.js":"5","C:\\Users\\Ldj\\Desktop\\projectHub_front\\src\\components\\views\\RegisterPage\\RegisterPage.js":"6","C:\\Users\\Ldj\\Desktop\\projectHub_front\\src\\components\\views\\LoginPage\\LoginPage.js":"7","C:\\Users\\Ldj\\Desktop\\projectHub_front\\src\\components\\views\\ProjectPage\\ProjectRouter.js":"8","C:\\Users\\Ldj\\Desktop\\projectHub_front\\src\\_reducers\\userReducer.js":"9","C:\\Users\\Ldj\\Desktop\\projectHub_front\\src\\components\\views\\ProjectPage\\ProjectMainPage.js":"10","C:\\Users\\Ldj\\Desktop\\projectHub_front\\src\\components\\views\\ProjectPage\\ProjectDetail.js":"11","C:\\Users\\Ldj\\Desktop\\projectHub_front\\src\\components\\views\\LoginPage\\LoginForm.js":"12","C:\\Users\\Ldj\\Desktop\\projectHub_front\\src\\components\\views\\ProjectPage\\NewProject.js":"13","C:\\Users\\Ldj\\Desktop\\projectHub_front\\src\\components\\views\\ProjectPage\\ProjectModify.js":"14","C:\\Users\\Ldj\\Desktop\\projectHub_front\\src\\_actions\\userAction.js":"15","C:\\Users\\Ldj\\Desktop\\projectHub_front\\src\\components\\Parts\\SearchForm\\SearchFrame.js":"16","C:\\Users\\Ldj\\Desktop\\projectHub_front\\src\\components\\Parts\\NavBar\\MainNavBar.js":"17","C:\\Users\\Ldj\\Desktop\\projectHub_front\\src\\_actions\\types.js":"18","C:\\Users\\Ldj\\Desktop\\projectHub_front\\src\\_actions\\projectAction.js":"19","C:\\Users\\Ldj\\Desktop\\projectHub_front\\src\\components\\views\\ProjectPage\\Project.js":"20","C:\\Users\\Ldj\\Desktop\\projectHub_front\\src\\components\\Parts\\SearchForm\\SearchForm.js":"21","C:\\Users\\Ldj\\Desktop\\projectHub_front\\src\\utils\\axios.js":"22","C:\\Users\\Ldj\\Desktop\\projectHub_front\\src\\components\\Parts\\NavBar\\LSButton.js":"23","C:\\Users\\Ldj\\Desktop\\projectHub_front\\src\\_actions\\config.js":"24"},{"size":1187,"mtime":1611752387526,"results":"25","hashOfConfig":"26"},{"size":951,"mtime":1611752387273,"results":"27","hashOfConfig":"26"},{"size":375,"mtime":1610526007841,"results":"28","hashOfConfig":"26"},{"size":161,"mtime":1610526007834,"results":"29","hashOfConfig":"26"},{"size":1132,"mtime":1611752387392,"results":"30","hashOfConfig":"26"},{"size":3760,"mtime":1611752387517,"results":"31","hashOfConfig":"26"},{"size":613,"mtime":1611752387424,"results":"32","hashOfConfig":"26"},{"size":889,"mtime":1611925801218,"results":"33","hashOfConfig":"26"},{"size":443,"mtime":1610526007835,"results":"34","hashOfConfig":"26"},{"size":1822,"mtime":1611925801207,"results":"35","hashOfConfig":"26"},{"size":2781,"mtime":1611925801182,"results":"36","hashOfConfig":"26"},{"size":2375,"mtime":1611752387411,"results":"37","hashOfConfig":"26"},{"size":3276,"mtime":1611925801158,"results":"38","hashOfConfig":"26"},{"size":3850,"mtime":1611925801209,"results":"39","hashOfConfig":"26"},{"size":615,"mtime":1610526007833,"results":"40","hashOfConfig":"26"},{"size":1064,"mtime":1611752387383,"results":"41","hashOfConfig":"26"},{"size":1530,"mtime":1611752387341,"results":"42","hashOfConfig":"26"},{"size":500,"mtime":1611925801118,"results":"43","hashOfConfig":"26"},{"size":2257,"mtime":1611925801108,"results":"44","hashOfConfig":"26"},{"size":784,"mtime":1611925801171,"results":"45","hashOfConfig":"26"},{"size":806,"mtime":1611752387364,"results":"46","hashOfConfig":"26"},{"size":353,"mtime":1612605178540,"results":"47","hashOfConfig":"26"},{"size":1100,"mtime":1611752387328,"results":"48","hashOfConfig":"26"},{"size":71,"mtime":1612605184762,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"80jfpf",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Ldj\\Desktop\\projectHub_front\\src\\index.js",[],["108","109"],"C:\\Users\\Ldj\\Desktop\\projectHub_front\\src\\App.js",[],"C:\\Users\\Ldj\\Desktop\\projectHub_front\\src\\reportWebVitals.js",[],"C:\\Users\\Ldj\\Desktop\\projectHub_front\\src\\_reducers\\index.js",[],"C:\\Users\\Ldj\\Desktop\\projectHub_front\\src\\components\\views\\LandingPage\\LandingPage.js",[],"C:\\Users\\Ldj\\Desktop\\projectHub_front\\src\\components\\views\\RegisterPage\\RegisterPage.js",[],"C:\\Users\\Ldj\\Desktop\\projectHub_front\\src\\components\\views\\LoginPage\\LoginPage.js",["110","111","112"],"import React, {useState} from 'react'\r\nimport \"./LoginForm.css\"\r\nimport MainNavBar from \"../../Parts/NavBar/MainNavBar\"\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Cookies from 'universal-cookie';\r\nimport LoginForm from \"./LoginForm\";\r\nimport { ThemeProvider } from 'react-bootstrap';\r\n \r\nconst cookies = new Cookies();\r\n\r\nfunction LoginPage(props) {\r\n\r\n    const onSuccessHandler = () => {\r\n      props.history.push(\"/\");\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <MainNavBar />\r\n        <LoginForm onSuccess={onSuccessHandler} />\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(LoginPage);\r\n","C:\\Users\\Ldj\\Desktop\\projectHub_front\\src\\components\\views\\ProjectPage\\ProjectRouter.js",[],"C:\\Users\\Ldj\\Desktop\\projectHub_front\\src\\_reducers\\userReducer.js",["113"],"import { REGISTER_USER, LOGIN_USER, LOGOUT_USER } from \"../_actions/types\";\r\n\r\nexport default function (state = {}, action) {\r\n  switch (action.type) {\r\n    case REGISTER_USER:\r\n      return { ...state, loginSuccess: action.payload };\r\n      case LOGIN_USER:\r\n        return { ...state, loginSuccess: action.payload };\r\n      case LOGOUT_USER:\r\n        return { ...state, success: action.payload };\r\n      default:\r\n      return state;\r\n  }\r\n}","C:\\Users\\Ldj\\Desktop\\projectHub_front\\src\\components\\views\\ProjectPage\\ProjectMainPage.js",["114"],"import React, {useEffect, useState} from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { getAllProject } from \"../../../_actions/projectAction\";\r\nimport { Link } from 'react-router-dom'\r\nimport { MdAdd } from \"react-icons/md\";\r\nimport './ProjectMainPage.css';\r\nimport Project from \"./Project\";\r\nimport MainNavBar from \"../../Parts/NavBar/MainNavBar\";\r\n\r\n\r\nfunction ProjectMainPage() {               // 프로젝트 카테고리 눌렀을 때 나오는 화면\r\n    const dispatch = useDispatch();\r\n\r\n    const [Projects, setProjects] = useState([]);\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllProject()).then((res) => {\r\n            setProjects(res.payload);\r\n        });\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <main>\r\n        <MainNavBar />\r\n        <br/><br/>\r\n        <h2 align=\"center\">Projects</h2>\r\n        <Link to=\"/project/write\" className=\"write\">\r\n            <MdAdd/>\r\n        </Link>\r\n        <div>\r\n            <div>\r\n                <table border=\"1\" className=\"mainTable\">\r\n                    <tbody align=\"center\">\r\n                        <tr align=\"center\">\r\n                            <td width=\"50px\">ID</td>\r\n                            <td width=\"200px\">Title</td>\r\n                            <td width=\"100px\">Name</td>\r\n                            <td width=\"150px\">Members</td>\r\n                            <td width=\"210px\">Upload Date</td>\r\n                        </tr>\r\n                        {Projects.map(project => (\r\n                        <Project key={project.idx} idx={project.idx} title={project.title} name={project.name} members={project.members} addDate={project.addDate} />\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default ProjectMainPage","C:\\Users\\Ldj\\Desktop\\projectHub_front\\src\\components\\views\\ProjectPage\\ProjectDetail.js",["115","116","117"],"import React, { useEffect, useState } from 'react'\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport NavBar from \"../../Parts/NavBar/MainNavBar\"\r\nimport { getProjectDetail, projectDelete } from \"../../../_actions/projectAction\";\r\nimport './Button.css';\r\n\r\n\r\nfunction ProjectDetail(props) {             // 게시물을 눌렀을 때 나오는 화면 \r\n  const param = useParams();\r\n  const idx = param.idx;\r\n  const dispatch = useDispatch();\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const[AddDate, setAddDate]= useState(\"\")\r\n  const[UpdateDate, setUpdateDate]= useState(\"\")\r\n  const[Name, setName]= useState(\"\")\r\n  const[Members, setMembers]= useState(\"\")\r\n  const[Title, setTitle]= useState(\"\")\r\n  const[Info, setInfo]= useState(\"\")\r\n\r\n  const[Team_idx, setTeam_idx]= useState(\"\")      // 팀 인덱스 값 임의로 지정\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(getProjectDetail(idx)).then((res) => {\r\n      console.log(res);\r\n      setAddDate(res.payload.addDate);\r\n      setUpdateDate(res.payload.updateDate);\r\n      setName(res.payload.name);\r\n      setMembers(res.payload.members);\r\n      setTitle(res.payload.title);\r\n      setInfo(res.payload.info);\r\n      setTeam_idx(res.payload.team_idx);      // 팀 인덱스 응답\r\n    });\r\n  }, []);\r\n\r\n\r\n  const onModify=(e)=>{\r\n    props.history.push(`/project/update/${idx}`);\r\n  }\r\n\r\n\r\n  const onDelete=(e)=>{\r\n    e.preventDefault();\r\n    if (window.confirm(\"Delete this posting?\")){\r\n          dispatch(projectDelete(idx)).then((response) => {\r\n            if (response) {\r\n              props.history.push(`/`);\r\n            } else {\r\n              alert(\"삭제에 실패했습니다!!\");\r\n            }\r\n          });\r\n        } else{\r\n            setOpen(false);\r\n        }\r\n  }\r\n\r\n\r\n    return (\r\n      <span>\r\n        <NavBar />\r\n        <div align=\"center\"><br/>\r\n          <button className=\"modify\" onClick={onModify}>수정</button>\r\n          <button className=\"delete\" style={{marginLeft : 15}} onClick={onDelete}>삭제</button><br/>\r\n          <h4>PROJECT | {Title}</h4>\r\n          <small>Upload Date: {AddDate}</small><br/>\r\n          <small>Modify Date: {UpdateDate}</small><br/><br/>\r\n\r\n          <div>\r\n            <span>Team Name</span><br/>\r\n            <p>{Name}</p>\r\n          </div><br/>\r\n\r\n          <div>\r\n            <span>Team Member</span><br/>\r\n            <p>{Members}</p>\r\n          </div><br/>\r\n\r\n          <div>\r\n            <span>Project Information</span><br/>\r\n            <div>{Info}</div>\r\n          </div><br/><br/>\r\n\r\n\r\n          {/*POSTING 부분*/}\r\n          <div>----------------------------------------------------</div>\r\n          <h4>POSTING</h4>\r\n\r\n        </div>\r\n      </span>\r\n    )\r\n}\r\n\r\nexport default ProjectDetail","C:\\Users\\Ldj\\Desktop\\projectHub_front\\src\\components\\views\\LoginPage\\LoginForm.js",["118","119","120"],"import React, {useState} from 'react'\r\nimport Form from \"react-bootstrap/Form\"\r\nimport Button from \"react-bootstrap/Button\"\r\nimport \"./LoginForm.css\"\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch } from \"react-redux\";\r\nimport { loginUser } from \"../../../_actions/userAction\";\r\nimport Cookies from 'universal-cookie';\r\nimport \"./LoginForm.css\"\r\n \r\nconst cookies = new Cookies();\r\n\r\nexport default function LoginForm(props) {\r\n\r\n    const[Id, setId]= useState(\"\")\r\n    const[Password, setPassword]= useState(\"\")\r\n    const dispatch = useDispatch();\r\n\r\n    \r\n    const onIdHandler=(event)=>{\r\n        setId(event.currentTarget.value)\r\n    }\r\n\r\n    const onPasswordHandler=(event)=>{\r\n        setPassword(event.currentTarget.value)\r\n    }\r\n\r\n    const onSubmitHandler=(event)=>{\r\n        event.preventDefault();  //페이지 고정 느낌\r\n\r\n        const body = {\r\n            id: Id,\r\n            pwd: Password,\r\n          };\r\n          dispatch(loginUser(body))\r\n            .then((res) => {\r\n              if (res.payload.loginSuccess) {\r\n                cookies.set(\"user\", res.payload.token);\r\n                props.onSuccess();\r\n              } else {\r\n                alert(res.payload.message);\r\n              }\r\n            })\r\n            .catch((err) => {\r\n              console.log(err);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div style={{\r\n            display:'flex', justifyContent:'center', alignItems:'center'\r\n            , width:'100%', height:'100vh'\r\n        }}>\r\n            \r\n          <Form style={{display:'flex', flexDirection:'column'}}\r\n              onSubmit={onSubmitHandler}\r\n          >\r\n            <Form.Group size=\"lg\" controlId=\"id\">\r\n            <Form.Label>ID</Form.Label>\r\n            <Form.Control\r\n              autoFocus\r\n              type=\"id\"\r\n              value={Id}\r\n              onChange={(e) => setId(e.target.value)}\r\n            />\r\n            </Form.Group>\r\n            <Form.Group size=\"lg\" controlId=\"password\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              value={Password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            </Form.Group>\r\n\r\n              <Button type=\"submit\" >로그인</Button>\r\n              <br/>\r\n            \r\n          </Form>\r\n\r\n      </div>\r\n    )\r\n}\r\n","C:\\Users\\Ldj\\Desktop\\projectHub_front\\src\\components\\views\\ProjectPage\\NewProject.js",["121"],"import React, {useState} from 'react'\r\nimport {  useDispatch } from 'react-redux';\r\nimport { projectUpload } from \"../../../_actions/projectAction\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IoMdArrowRoundBack } from \"react-icons/io\";\r\nimport './Button.css';\r\n\r\n\r\nfunction NewProject(props) {                     // 글 작성\r\n    const dispatch = useDispatch();\r\n\r\n    const[Name, setName]= useState(\"\")\r\n    const[Members, setMembers]= useState(\"\")\r\n    const[Title, setTitle]= useState(\"\")\r\n    const[Info, setInfo]= useState(\"\")\r\n    const[Team_idx, setTeam_idx]= useState(\"\")      // 팀 인덱스 값 임의로 지정\r\n\r\n    const onNameHandler=(event)=>{\r\n        setName(event.currentTarget.value)\r\n    }\r\n\r\n    const onMembersHandler=(event)=>{\r\n        setMembers(event.currentTarget.value)\r\n    }\r\n\r\n    const onTitleHandler=(event)=>{\r\n        setTitle(event.currentTarget.value)\r\n    }\r\n\r\n    const onInfoHandler=(event)=>{\r\n        setInfo(event.currentTarget.value)\r\n    }\r\n  \r\n\r\n     const onUpload=(e)=>{\r\n        e.preventDefault();\r\n\r\n        if(!Name){\r\n            alert(\"팀 이름을 적어주세요!\");\r\n        } else if(!Members){\r\n            alert(\"팀원을 적어주세요!\");\r\n        } else if(!Title){\r\n            alert(\"제목을 적어주세요!\");\r\n        } else if(!Info){\r\n            alert(\"세부사항을 적어주세요!\");\r\n        } else{\r\n            const formData = new FormData();\r\n            formData.append(\"name\", Name);\r\n            formData.append(\"members\", Members);\r\n            formData.append(\"title\", Title);\r\n            formData.append(\"info\", Info);\r\n            formData.append(\"team_idx\", Team_idx);            // 팀 인덱스 요청\r\n\r\n            dispatch(projectUpload(formData)).then((res) => {\r\n                if (res) {\r\n                  props.history.push(\"/\");\r\n                } else {\r\n                  alert(\"업로드에 실패했습니다!!\");\r\n                }\r\n              });\r\n        }\r\n    }\r\n    \r\n    return (\r\n      <div><br/>\r\n        <Link to=\"/project/\" className=\"back\">\r\n          <IoMdArrowRoundBack/>\r\n        </Link>\r\n        <br/><br/>\r\n        <div align=\"center\">\r\n          <h5>| Project Upload |</h5><br/>\r\n\r\n          <div>\r\n            <span>● Team Name</span><br/>\r\n            <input\r\n              value={Name} onChange={onNameHandler}\r\n            />\r\n          </div><br/>\r\n\r\n          <div>\r\n            <span>● Team Member</span><br/>\r\n            <input\r\n              placeholder=\"Pick a team member through the button\"\r\n              value={Members} onChange={onMembersHandler} \r\n            />\r\n            <button className=\"chooseBtn\">Choose team</button>\r\n          </div><br/>\r\n\r\n          <div>\r\n            <span>● Project Title</span><br/>\r\n            <input\r\n              value={Title} onChange={onTitleHandler} \r\n            />\r\n          </div><br/>\r\n\r\n          <div>\r\n            <span>● Project Information</span><br/>\r\n            <textarea \r\n              value={Info} onChange={onInfoHandler}\r\n              cols=\"40\" rows=\"5\" \r\n            />\r\n          </div><br/><br/>\r\n\r\n          <button className=\"uploadBtn\" onClick={onUpload}>Upload</button>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default NewProject","C:\\Users\\Ldj\\Desktop\\projectHub_front\\src\\components\\views\\ProjectPage\\ProjectModify.js",["122","123","124"],"import React, { useEffect, useState } from 'react'\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IoMdArrowRoundBack } from \"react-icons/io\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport NavBar from \"../../Parts/NavBar/MainNavBar\"\r\nimport { projectModify, getProjectDetail } from \"../../../_actions/projectAction\";\r\nimport './Button.css';\r\n\r\n\r\nfunction ProjectModify(props) {              // 게시물 수정\r\n    const dispatch = useDispatch();\r\n    const param = useParams();\r\n    const idx = param.idx;\r\n\r\n    const[Name, setName]= useState(\"\")\r\n    const[Members, setMembers]= useState(\"\")\r\n    const[Title, setTitle]= useState(\"\")\r\n    const[Info, setInfo]= useState(\"\")\r\n    const[Team_idx, setTeam_idx]= useState(\"\")      // 팀 인덱스 값 임의로 지정\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(getProjectDetail(idx)).then((res) => {\r\n          setName(res.payload.name);\r\n          setMembers(res.payload.members);\r\n          setTitle(res.payload.title);\r\n          setInfo(res.payload.info);\r\n        },[]);\r\n      }, []);\r\n\r\n\r\n    const onNameHandler=(event)=>{\r\n        setName(event.currentTarget.value)\r\n    }\r\n\r\n    const onMembersHandler=(event)=>{\r\n        setMembers(event.currentTarget.value)\r\n    }\r\n\r\n    const onTitleHandler=(event)=>{\r\n        setTitle(event.currentTarget.value)\r\n    }\r\n\r\n    const onInfoHandler=(event)=>{\r\n        setInfo(event.currentTarget.value)\r\n    }\r\n\r\n\r\n    const onModify=(e)=>{\r\n        e.preventDefault();\r\n\r\n        if(!Name){\r\n            alert(\"팀 이름을 적어주세요!\");\r\n        } else if(!Members){\r\n            alert(\"팀원을 적어주세요!\");\r\n        } else if(!Title){\r\n            alert(\"제목을 적어주세요!\");\r\n        } else if(!Info){\r\n            alert(\"세부사항을 적어주세요!\");\r\n        } else{\r\n            const postBody = {\r\n              idx : idx,\r\n              name : Name,\r\n              members : Members,\r\n              title : Title,\r\n              info : Info,\r\n            }\r\n            console.log(postBody);\r\n        // 팀 인덱스 요청\r\n\r\n            dispatch(projectModify({postBody, idx })).then((res) => {\r\n                console.log(res);\r\n                if (res) {\r\n                  props.history.push(`/project/read/${idx}`);\r\n                } else {\r\n                  alert(\"게시물 수정에 실패했습니다.\");\r\n                }\r\n              });\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n      <span>\r\n        <NavBar />\r\n        <div><br/>\r\n          <Link to=\"/\">\r\n           <IoMdArrowRoundBack />\r\n          </Link>\r\n          <br/><br/>\r\n          <div align=\"center\">\r\n            <h5>| Project Modify |</h5><br/>\r\n\r\n            <div>\r\n              <span>Team Name</span><br/>\r\n              <input\r\n                value={Name} onChange={onNameHandler} \r\n                />\r\n            </div><br/>\r\n\r\n            <div>\r\n              <span>Team Member</span><br/>\r\n              <input\r\n                placeholder=\"Pick a team member through the button\"\r\n                value={Members} onChange={onMembersHandler} \r\n                />\r\n              <button className=\"chooseBtn\">Choose team</button>\r\n            </div><br/>\r\n\r\n            <div>\r\n              <span>Project Title</span><br/>\r\n              <input\r\n                value={Title} onChange={onTitleHandler} \r\n                />\r\n            </div><br/>\r\n\r\n            <div>\r\n              <span>● Project Information</span><br/>\r\n              <textarea \r\n                value={Info} onChange={onInfoHandler}\r\n                cols=\"40\" rows=\"5\" \r\n                />\r\n            </div><br/><br/>\r\n\r\n            <button className=\"modifyBtn\" onClick={onModify}>Modify</button>\r\n          </div>\r\n        </div>\r\n      </span>\r\n    )\r\n}\r\n\r\nexport default ProjectModify","C:\\Users\\Ldj\\Desktop\\projectHub_front\\src\\_actions\\userAction.js",[],"C:\\Users\\Ldj\\Desktop\\projectHub_front\\src\\components\\Parts\\SearchForm\\SearchFrame.js",[],"C:\\Users\\Ldj\\Desktop\\projectHub_front\\src\\components\\Parts\\NavBar\\MainNavBar.js",["125","126","127"],"import React,{Component} from 'react';\r\nimport { Navbar,Button,Nav,ButtonGroup } from 'react-bootstrap';\r\nimport {LinkContainer} from 'react-router-bootstrap';\r\nimport LSButton from './LSButton';\r\n\r\nclass NavBar extends Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    //includes login,signup buttons\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Navbar className = \"Nav\" bg=\"dark\" variant=\"dark\">\r\n                        {/* Navbar 사용을 위해서 <LinkContainer>로 묶어줌 */}\r\n                        <LinkContainer to=\"/\">\r\n                            <Navbar.Brand>\r\n                                <div className=\"ProjectHubText\">\r\n                                    ProjectHub\r\n                                </div>\r\n                            </Navbar.Brand>\r\n                        </LinkContainer>\r\n                    <Nav className=\"mr-auto\">\r\n                        <LinkContainer to=\"/project\">\r\n                            <Nav.Link>\r\n                                Projects\r\n                            </Nav.Link>\r\n                        </LinkContainer>\r\n                        <LinkContainer to=\"/signup\">\r\n                            <Nav.Link>\r\n                                About Us\r\n                            </Nav.Link>\r\n                        </LinkContainer>\r\n                    </Nav>\r\n                    <LSButton />\r\n                    \r\n                </Navbar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavBar;","C:\\Users\\Ldj\\Desktop\\projectHub_front\\src\\_actions\\types.js",[],"C:\\Users\\Ldj\\Desktop\\projectHub_front\\src\\_actions\\projectAction.js",["128"],"import {UPLOAD_SUCCESS,UPLOAD_FAILURE,MODIFY_SUCCESS,MODIFY_FAILURE,PROJECT_DELETE,GET_PROJECT_DETAIL,GET_ALL_PROJECT } from \"./types\";\r\nimport axios from \"axios\";\r\nimport {request} from \"../utils/axios\"\r\nimport { SERVER_API } from \"./config\";\r\n\r\n\r\n// 게시물(포스트) 업로드(생성)\r\nexport const projectUpload = (datas) => (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"multipart/form-data\",\r\n    },\r\n  };\r\n  console.log(datas)\r\n  let result = axios\r\n    .post(`/project/upload`, datas, config)\r\n    .then((res) => {\r\n      dispatch({ type: UPLOAD_SUCCESS, payload: res.data });\r\n      return true;\r\n    })\r\n    .catch((err) => {\r\n      dispatch({ type: UPLOAD_FAILURE, payload: err });\r\n      return false;\r\n    });\r\n  return result;\r\n};\r\n\r\nexport function projectModify(dataTosubmit, idx) {\r\n  const data = request(\"post\", \"/project/update\", dataTosubmit);\r\n\r\n  return {\r\n    type : MODIFY_FAILURE,\r\n    payload : data\r\n  }\r\n}\r\n\r\n// 게시물 수정\r\n// export const projectModify = ({ formData, idx }) => (dispatch) => {\r\n//   const config = {\r\n//     headers: { \"Content-Type\": \"multipart/json\" },\r\n//   };\r\n\r\n//   return axios\r\n//     .post(`${SERVER_API}/project/update`, {formData}, {headers:config.headers})\r\n//     .then((res) => {\r\n//       dispatch({ type: MODIFY_SUCCESS, payload: res.data });\r\n//       return true;\r\n//     })\r\n//     .catch((err) => {\r\n//       dispatch({ type: MODIFY_FAILURE, payload: err });\r\n//       return false;\r\n//     });\r\n// };\r\n\r\n\r\n// 게시물 삭제\r\nexport const projectDelete = (idx) => {\r\n  const request = axios\r\n    .get(`${SERVER_API}/project/delete/${idx}`)\r\n    .then((res) => res.data);\r\n\r\n  return {\r\n    type: PROJECT_DELETE,\r\n    payload: request,\r\n  };\r\n};\r\n\r\n\r\n//해당 포스트의 디테일 정보받기\r\nexport function getProjectDetail(idx) {\r\n  const request = axios\r\n    .get(`${SERVER_API}/project/${idx}`)\r\n    .then((res) => res.data);\r\n\r\n  return {\r\n    type: GET_PROJECT_DETAIL,\r\n    payload: request,\r\n  };\r\n}\r\n\r\n\r\n//모든 포스트의 정보받기\r\nexport function getAllProject() {\r\n  const request = axios\r\n    .get(`${SERVER_API}/project`)\r\n    .then((res) => res.data);\r\n\r\n  return {\r\n    type: GET_ALL_PROJECT,\r\n    payload: request,\r\n  };\r\n}","C:\\Users\\Ldj\\Desktop\\projectHub_front\\src\\components\\views\\ProjectPage\\Project.js",[],"C:\\Users\\Ldj\\Desktop\\projectHub_front\\src\\components\\Parts\\SearchForm\\SearchForm.js",[],"C:\\Users\\Ldj\\Desktop\\projectHub_front\\src\\utils\\axios.js",[],"C:\\Users\\Ldj\\Desktop\\projectHub_front\\src\\components\\Parts\\NavBar\\LSButton.js",[],"C:\\Users\\Ldj\\Desktop\\projectHub_front\\src\\_actions\\config.js",[],{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","severity":1,"message":"134","line":1,"column":16,"nodeType":"135","messageId":"136","endLine":1,"endColumn":24},{"ruleId":"133","severity":1,"message":"137","line":7,"column":10,"nodeType":"135","messageId":"136","endLine":7,"endColumn":23},{"ruleId":"133","severity":1,"message":"138","line":9,"column":7,"nodeType":"135","messageId":"136","endLine":9,"endColumn":14},{"ruleId":"139","severity":1,"message":"140","line":3,"column":1,"nodeType":"141","endLine":14,"endColumn":2},{"ruleId":"142","severity":1,"message":"143","line":20,"column":8,"nodeType":"144","endLine":20,"endColumn":10,"suggestions":"145"},{"ruleId":"133","severity":1,"message":"146","line":14,"column":10,"nodeType":"135","messageId":"136","endLine":14,"endColumn":14},{"ruleId":"133","severity":1,"message":"147","line":23,"column":9,"nodeType":"135","messageId":"136","endLine":23,"endColumn":17},{"ruleId":"142","severity":1,"message":"148","line":37,"column":6,"nodeType":"144","endLine":37,"endColumn":8,"suggestions":"149"},{"ruleId":"133","severity":1,"message":"150","line":5,"column":10,"nodeType":"135","messageId":"136","endLine":5,"endColumn":14},{"ruleId":"133","severity":1,"message":"151","line":20,"column":11,"nodeType":"135","messageId":"136","endLine":20,"endColumn":22},{"ruleId":"133","severity":1,"message":"152","line":24,"column":11,"nodeType":"135","messageId":"136","endLine":24,"endColumn":28},{"ruleId":"133","severity":1,"message":"153","line":16,"column":21,"nodeType":"135","messageId":"136","endLine":16,"endColumn":32},{"ruleId":"133","severity":1,"message":"147","line":20,"column":11,"nodeType":"135","messageId":"136","endLine":20,"endColumn":19},{"ruleId":"133","severity":1,"message":"153","line":20,"column":21,"nodeType":"135","messageId":"136","endLine":20,"endColumn":32},{"ruleId":"142","severity":1,"message":"148","line":30,"column":10,"nodeType":"144","endLine":30,"endColumn":12,"suggestions":"154"},{"ruleId":"133","severity":1,"message":"155","line":2,"column":17,"nodeType":"135","messageId":"136","endLine":2,"endColumn":23},{"ruleId":"133","severity":1,"message":"156","line":2,"column":28,"nodeType":"135","messageId":"136","endLine":2,"endColumn":39},{"ruleId":"157","severity":1,"message":"158","line":7,"column":5,"nodeType":"159","messageId":"160","endLine":9,"endColumn":6},{"ruleId":"133","severity":1,"message":"161","line":1,"column":39,"nodeType":"135","messageId":"136","endLine":1,"endColumn":53},"no-native-reassign",["162"],"no-negated-in-lhs",["163"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'ThemeProvider' is defined but never used.","'cookies' is assigned a value but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["164"],"'open' is assigned a value but never used.","'Team_idx' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'idx'. Either include them or remove the dependency array.",["165"],"'Link' is defined but never used.","'onIdHandler' is assigned a value but never used.","'onPasswordHandler' is assigned a value but never used.","'setTeam_idx' is assigned a value but never used.",["166"],"'Button' is defined but never used.","'ButtonGroup' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'MODIFY_SUCCESS' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"167","fix":"168"},{"desc":"169","fix":"170"},{"desc":"169","fix":"171"},"Update the dependencies array to be: [dispatch]",{"range":"172","text":"173"},"Update the dependencies array to be: [dispatch, idx]",{"range":"174","text":"175"},{"range":"176","text":"175"},[665,667],"[dispatch]",[1244,1246],"[dispatch, idx]",[1066,1068]]