{"ast":null,"code":"import { UPLOAD_SUCCESS, UPLOAD_FAILURE, MODIFY_SUCCESS, MODIFY_FAILURE, PROJECT_DELETE, GET_PROJECT_DETAIL, GET_ALL_PROJECT } from \"./types\";\nimport axios from \"axios\";\nimport { request } from \"../utils/axios\";\nimport { SERVER_API } from \"./config\"; // 게시물(포스트) 업로드(생성)\n\nexport const projectUpload = datas => dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\"\n    }\n  };\n  console.log(datas);\n  let result = axios.post(`/project/upload`, datas, config).then(res => {\n    dispatch({\n      type: UPLOAD_SUCCESS,\n      payload: res.data\n    });\n    return true;\n  }).catch(err => {\n    dispatch({\n      type: UPLOAD_FAILURE,\n      payload: err\n    });\n    return false;\n  });\n  return result;\n};\nexport function projectModify(dataTosubmit) {\n  const data = request(\"post\", \"/project/update\", dataTosubmit);\n  return {\n    type: MODIFY_FAILURE,\n    payload: data\n  };\n} // 게시물 수정\n// export const projectModify = ({ formData, idx }) => (dispatch) => {\n//   const config = {\n//     headers: { \"Content-Type\": \"multipart/json\" },\n//   };\n//   return axios\n//     .post(`${SERVER_API}/project/update`, {formData}, {headers:config.headers})\n//     .then((res) => {\n//       dispatch({ type: MODIFY_SUCCESS, payload: res.data });\n//       return true;\n//     })\n//     .catch((err) => {\n//       dispatch({ type: MODIFY_FAILURE, payload: err });\n//       return false;\n//     });\n// };\n// 게시물 삭제\n\nexport const projectDelete = idx => {\n  const request = axios.get(`${SERVER_API}/project/delete/${idx}`).then(res => res.data);\n  return {\n    type: PROJECT_DELETE,\n    payload: request\n  };\n}; //해당 포스트의 디테일 정보받기\n\nexport function getProjectDetail(idx) {\n  const request = axios.get(`${SERVER_API}/project/${idx}`).then(res => res.data);\n  return {\n    type: GET_PROJECT_DETAIL,\n    payload: request\n  };\n} //모든 포스트의 정보받기\n\nexport function getAllProject() {\n  const request = axios.get(`${SERVER_API}/project`).then(res => res.data);\n  return {\n    type: GET_ALL_PROJECT,\n    payload: request\n  };\n}","map":{"version":3,"sources":["C:/Users/Ldj/Desktop/projectHub_front/src/_actions/projectAction.js"],"names":["UPLOAD_SUCCESS","UPLOAD_FAILURE","MODIFY_SUCCESS","MODIFY_FAILURE","PROJECT_DELETE","GET_PROJECT_DETAIL","GET_ALL_PROJECT","axios","request","SERVER_API","projectUpload","datas","dispatch","config","headers","console","log","result","post","then","res","type","payload","data","catch","err","projectModify","dataTosubmit","projectDelete","idx","get","getProjectDetail","getAllProject"],"mappings":"AAAA,SACEA,cADF,EAEEC,cAFF,EAGEC,cAHF,EAIEC,cAJF,EAKEC,cALF,EAMEC,kBANF,EAOEC,eAPF,QAQO,SARP;AASA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,SAASC,UAAT,QAA2B,UAA3B,C,CAEA;;AACA,OAAO,MAAMC,aAAa,GAAIC,KAAD,IAAYC,QAAD,IAAc;AACpD,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AADI,GAAf;AAKAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACA,MAAIM,MAAM,GAAGV,KAAK,CACfW,IADU,CACJ,iBADI,EACcP,KADd,EACqBE,MADrB,EAEVM,IAFU,CAEJC,GAAD,IAAS;AACbR,IAAAA,QAAQ,CAAC;AAAES,MAAAA,IAAI,EAAErB,cAAR;AAAwBsB,MAAAA,OAAO,EAAEF,GAAG,CAACG;AAArC,KAAD,CAAR;AACA,WAAO,IAAP;AACD,GALU,EAMVC,KANU,CAMHC,GAAD,IAAS;AACdb,IAAAA,QAAQ,CAAC;AAAES,MAAAA,IAAI,EAAEpB,cAAR;AAAwBqB,MAAAA,OAAO,EAAEG;AAAjC,KAAD,CAAR;AACA,WAAO,KAAP;AACD,GATU,CAAb;AAUA,SAAOR,MAAP;AACD,CAlBM;AAoBP,OAAO,SAASS,aAAT,CAAuBC,YAAvB,EAAqC;AAC1C,QAAMJ,IAAI,GAAGf,OAAO,CAAC,MAAD,EAAS,iBAAT,EAA4BmB,YAA5B,CAApB;AAEA,SAAO;AACLN,IAAAA,IAAI,EAAElB,cADD;AAELmB,IAAAA,OAAO,EAAEC;AAFJ,GAAP;AAID,C,CAED;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,OAAO,MAAMK,aAAa,GAAIC,GAAD,IAAS;AACpC,QAAMrB,OAAO,GAAGD,KAAK,CAClBuB,GADa,CACR,GAAErB,UAAW,mBAAkBoB,GAAI,EAD3B,EAEbV,IAFa,CAEPC,GAAD,IAASA,GAAG,CAACG,IAFL,CAAhB;AAIA,SAAO;AACLF,IAAAA,IAAI,EAAEjB,cADD;AAELkB,IAAAA,OAAO,EAAEd;AAFJ,GAAP;AAID,CATM,C,CAWP;;AACA,OAAO,SAASuB,gBAAT,CAA0BF,GAA1B,EAA+B;AACpC,QAAMrB,OAAO,GAAGD,KAAK,CAClBuB,GADa,CACR,GAAErB,UAAW,YAAWoB,GAAI,EADpB,EAEbV,IAFa,CAEPC,GAAD,IAASA,GAAG,CAACG,IAFL,CAAhB;AAIA,SAAO;AACLF,IAAAA,IAAI,EAAEhB,kBADD;AAELiB,IAAAA,OAAO,EAAEd;AAFJ,GAAP;AAID,C,CAED;;AACA,OAAO,SAASwB,aAAT,GAAyB;AAC9B,QAAMxB,OAAO,GAAGD,KAAK,CAACuB,GAAN,CAAW,GAAErB,UAAW,UAAxB,EAAmCU,IAAnC,CAAyCC,GAAD,IAASA,GAAG,CAACG,IAArD,CAAhB;AAEA,SAAO;AACLF,IAAAA,IAAI,EAAEf,eADD;AAELgB,IAAAA,OAAO,EAAEd;AAFJ,GAAP;AAID","sourcesContent":["import {\r\n  UPLOAD_SUCCESS,\r\n  UPLOAD_FAILURE,\r\n  MODIFY_SUCCESS,\r\n  MODIFY_FAILURE,\r\n  PROJECT_DELETE,\r\n  GET_PROJECT_DETAIL,\r\n  GET_ALL_PROJECT,\r\n} from \"./types\";\r\nimport axios from \"axios\";\r\nimport { request } from \"../utils/axios\";\r\nimport { SERVER_API } from \"./config\";\r\n\r\n// 게시물(포스트) 업로드(생성)\r\nexport const projectUpload = (datas) => (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"multipart/form-data\",\r\n    },\r\n  };\r\n  console.log(datas);\r\n  let result = axios\r\n    .post(`/project/upload`, datas, config)\r\n    .then((res) => {\r\n      dispatch({ type: UPLOAD_SUCCESS, payload: res.data });\r\n      return true;\r\n    })\r\n    .catch((err) => {\r\n      dispatch({ type: UPLOAD_FAILURE, payload: err });\r\n      return false;\r\n    });\r\n  return result;\r\n};\r\n\r\nexport function projectModify(dataTosubmit) {\r\n  const data = request(\"post\", \"/project/update\", dataTosubmit);\r\n\r\n  return {\r\n    type: MODIFY_FAILURE,\r\n    payload: data,\r\n  };\r\n}\r\n\r\n// 게시물 수정\r\n// export const projectModify = ({ formData, idx }) => (dispatch) => {\r\n//   const config = {\r\n//     headers: { \"Content-Type\": \"multipart/json\" },\r\n//   };\r\n\r\n//   return axios\r\n//     .post(`${SERVER_API}/project/update`, {formData}, {headers:config.headers})\r\n//     .then((res) => {\r\n//       dispatch({ type: MODIFY_SUCCESS, payload: res.data });\r\n//       return true;\r\n//     })\r\n//     .catch((err) => {\r\n//       dispatch({ type: MODIFY_FAILURE, payload: err });\r\n//       return false;\r\n//     });\r\n// };\r\n\r\n// 게시물 삭제\r\nexport const projectDelete = (idx) => {\r\n  const request = axios\r\n    .get(`${SERVER_API}/project/delete/${idx}`)\r\n    .then((res) => res.data);\r\n\r\n  return {\r\n    type: PROJECT_DELETE,\r\n    payload: request,\r\n  };\r\n};\r\n\r\n//해당 포스트의 디테일 정보받기\r\nexport function getProjectDetail(idx) {\r\n  const request = axios\r\n    .get(`${SERVER_API}/project/${idx}`)\r\n    .then((res) => res.data);\r\n\r\n  return {\r\n    type: GET_PROJECT_DETAIL,\r\n    payload: request,\r\n  };\r\n}\r\n\r\n//모든 포스트의 정보받기\r\nexport function getAllProject() {\r\n  const request = axios.get(`${SERVER_API}/project`).then((res) => res.data);\r\n\r\n  return {\r\n    type: GET_ALL_PROJECT,\r\n    payload: request,\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}