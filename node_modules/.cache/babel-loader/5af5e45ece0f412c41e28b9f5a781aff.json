{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\82104\\\\Desktop\\\\projectHub_front-main (2)\\\\projectHub_front-main\\\\src\\\\components\\\\views\\\\LandingPage\\\\LandingPage.js\",\n    _s = $RefreshSig$();\n\nimport SearchFrame from '../../Parts/SearchForm/SearchFrame';\nimport React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { logoutUser } from \"../../../_actions/userAction\";\nimport Cookies from 'universal-cookie';\nimport NavBar from '../../Parts/NavBar/MainNavBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cookies = new Cookies();\n\nfunction LandingPage(props) {\n  _s();\n\n  const dispatch = useDispatch();\n\n  const onLogoutHandler = () => {\n    //useDispatch를 사용해서 로그아웃 액션을 실행한다\n    //useDispatch와 logout 액션이 두가지 필요하다\n    dispatch(logoutUser()).then(res => {\n      console.log(res);\n\n      if (cookies.get(\"user\") !== undefined) {\n        cookies.remove(\"user\");\n        props.history.push(\"/login\");\n      } else {\n        alert(\"로그아웃에 실패하였습니다\");\n      }\n    }).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      onLogout: onLogoutHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchFrame, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LandingPage, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = LandingPage;\nexport default _c2 = withRouter(LandingPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LandingPage\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/82104/Desktop/projectHub_front-main (2)/projectHub_front-main/src/components/views/LandingPage/LandingPage.js"],"names":["SearchFrame","React","withRouter","useDispatch","logoutUser","Cookies","NavBar","cookies","LandingPage","props","dispatch","onLogoutHandler","then","res","console","log","get","undefined","remove","history","push","alert","catch","err"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,oCAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,QAA2B,8BAA3B;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,MAAP,MAAmB,+BAAnB;;AAGA,MAAMC,OAAO,GAAG,IAAIF,OAAJ,EAAhB;;AAGA,SAASG,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAC1B,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;;AACA,QAAMQ,eAAe,GAAG,MAAM;AAC5B;AACA;AACAD,IAAAA,QAAQ,CAACN,UAAU,EAAX,CAAR,CACGQ,IADH,CACSC,GAAD,IAAS;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;;AACA,UAAIN,OAAO,CAACS,GAAR,CAAY,MAAZ,MAAwBC,SAA5B,EAAuC;AACrCV,QAAAA,OAAO,CAACW,MAAR,CAAe,MAAf;AACAT,QAAAA,KAAK,CAACU,OAAN,CAAcC,IAAd,CAAmB,QAAnB;AACD,OAHD,MAGO;AACLC,QAAAA,KAAK,CAAC,eAAD,CAAL;AACD;AACF,KATH,EAUGC,KAVH,CAUUC,GAAD,IAAST,OAAO,CAACC,GAAR,CAAYQ,GAAZ,CAVlB;AAWD,GAdD;;AAgBA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAEZ;AAAlB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAzBQH,W;UACUL,W;;;KADVK,W;AA2BT,qBAAeN,UAAU,CAACM,WAAD,CAAzB","sourcesContent":["import SearchFrame from '../../Parts/SearchForm/SearchFrame';\nimport React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { logoutUser } from \"../../../_actions/userAction\";\nimport Cookies from 'universal-cookie';\nimport NavBar from '../../Parts/NavBar/MainNavBar';\n\n \nconst cookies = new Cookies()\n\n\nfunction LandingPage(props) {\n  const dispatch = useDispatch();\n  const onLogoutHandler = () => {\n    //useDispatch를 사용해서 로그아웃 액션을 실행한다\n    //useDispatch와 logout 액션이 두가지 필요하다\n    dispatch(logoutUser())\n      .then((res) => {\n        console.log(res);\n        if (cookies.get(\"user\") !== undefined) {\n          cookies.remove(\"user\");\n          props.history.push(\"/login\");\n        } else {\n          alert(\"로그아웃에 실패하였습니다\");\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n\n  return (\n    <div>\n      <NavBar onLogout={onLogoutHandler}/>\n      <SearchFrame />\n      <br />\n    </div>\n  );\n}\n\nexport default withRouter(LandingPage);\n"]},"metadata":{},"sourceType":"module"}