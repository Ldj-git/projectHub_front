{"ast":null,"code":"import { TEAM_UPLOAD_SUCCESS, TEAM_UPLOAD_FAILURE, TEAM_MODIFY_SUCCESS, TEAM_MODIFY_FAILURE, TEAM_DELETE, GET_TEAM_DETAIL, GET_ALL_TEAM } from \"./types\";\nimport axios from \"axios\";\nimport { request } from \"../utils/axios\";\nimport { SERVER_API } from \"./config\"; // 팀 생성\n\nexport const teamUpload = datas => dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\"\n    }\n  };\n  console.log(datas);\n  let result = axios.post(`/team/create`, datas, config).then(res => {\n    dispatch({\n      type: TEAM_UPLOAD_SUCCESS,\n      payload: res.data\n    });\n    return true;\n  }).catch(err => {\n    dispatch({\n      type: TEAM_UPLOAD_FAILURE,\n      payload: err\n    });\n    return false;\n  });\n  return result;\n}; // 팀 수정\n\nexport function teamModify(dataTosubmit, idx) {\n  const data = request(\"post\", \"/team/update\", dataTosubmit);\n  return {\n    type: TEAM_MODIFY_FAILURE,\n    payload: data\n  };\n} // 팀 삭제\n\nexport const teamDelete = idx => {\n  const request = axios.get(`${SERVER_API}/team/delete/${idx}`).then(res => res.data);\n  return {\n    type: TEAM_DELETE,\n    payload: request\n  };\n}; //해당 팀의 디테일 정보받기\n\nexport function getTeamDetail(idx) {\n  const request = axios.get(`${SERVER_API}/team/${idx}`).then(res => res.data);\n  return {\n    type: GET_TEAM_DETAIL,\n    payload: request\n  };\n} //모든 팀의 정보받기\n\nexport function getAllTeam() {\n  const request = axios.get(`${SERVER_API}/team`).then(res => res.data);\n  return {\n    type: GET_ALL_TEAM,\n    payload: request\n  };\n}","map":{"version":3,"sources":["C:/Users/Ldj/Desktop/projectHub_front/src/_actions/teamAction.js"],"names":["TEAM_UPLOAD_SUCCESS","TEAM_UPLOAD_FAILURE","TEAM_MODIFY_SUCCESS","TEAM_MODIFY_FAILURE","TEAM_DELETE","GET_TEAM_DETAIL","GET_ALL_TEAM","axios","request","SERVER_API","teamUpload","datas","dispatch","config","headers","console","log","result","post","then","res","type","payload","data","catch","err","teamModify","dataTosubmit","idx","teamDelete","get","getTeamDetail","getAllTeam"],"mappings":"AAAA,SAAQA,mBAAR,EAA4BC,mBAA5B,EAAgDC,mBAAhD,EAAoEC,mBAApE,EAAwFC,WAAxF,EAAoGC,eAApG,EAAoHC,YAApH,QAAwI,SAAxI;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,gBAAtB;AACA,SAASC,UAAT,QAA2B,UAA3B,C,CAGA;;AACA,OAAO,MAAMC,UAAU,GAAIC,KAAD,IAAYC,QAAD,IAAc;AACjD,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AADI,GAAf;AAKAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACA,MAAIM,MAAM,GAAGV,KAAK,CACfW,IADU,CACJ,cADI,EACWP,KADX,EACkBE,MADlB,EAEVM,IAFU,CAEJC,GAAD,IAAS;AACbR,IAAAA,QAAQ,CAAC;AAAES,MAAAA,IAAI,EAAErB,mBAAR;AAA6BsB,MAAAA,OAAO,EAAEF,GAAG,CAACG;AAA1C,KAAD,CAAR;AACA,WAAO,IAAP;AACD,GALU,EAMVC,KANU,CAMHC,GAAD,IAAS;AACdb,IAAAA,QAAQ,CAAC;AAAES,MAAAA,IAAI,EAAEpB,mBAAR;AAA6BqB,MAAAA,OAAO,EAAEG;AAAtC,KAAD,CAAR;AACA,WAAO,KAAP;AACD,GATU,CAAb;AAUA,SAAOR,MAAP;AACD,CAlBM,C,CAqBP;;AACA,OAAO,SAASS,UAAT,CAAoBC,YAApB,EAAkCC,GAAlC,EAAuC;AAC5C,QAAML,IAAI,GAAGf,OAAO,CAAC,MAAD,EAAS,cAAT,EAAyBmB,YAAzB,CAApB;AAEA,SAAO;AACLN,IAAAA,IAAI,EAAGlB,mBADF;AAELmB,IAAAA,OAAO,EAAGC;AAFL,GAAP;AAID,C,CAGD;;AACA,OAAO,MAAMM,UAAU,GAAID,GAAD,IAAS;AACjC,QAAMpB,OAAO,GAAGD,KAAK,CAClBuB,GADa,CACR,GAAErB,UAAW,gBAAemB,GAAI,EADxB,EAEbT,IAFa,CAEPC,GAAD,IAASA,GAAG,CAACG,IAFL,CAAhB;AAIA,SAAO;AACLF,IAAAA,IAAI,EAAEjB,WADD;AAELkB,IAAAA,OAAO,EAAEd;AAFJ,GAAP;AAID,CATM,C,CAYP;;AACA,OAAO,SAASuB,aAAT,CAAuBH,GAAvB,EAA4B;AACjC,QAAMpB,OAAO,GAAGD,KAAK,CAClBuB,GADa,CACR,GAAErB,UAAW,SAAQmB,GAAI,EADjB,EAEbT,IAFa,CAEPC,GAAD,IAASA,GAAG,CAACG,IAFL,CAAhB;AAIA,SAAO;AACLF,IAAAA,IAAI,EAAEhB,eADD;AAELiB,IAAAA,OAAO,EAAEd;AAFJ,GAAP;AAID,C,CAGD;;AACA,OAAO,SAASwB,UAAT,GAAsB;AAC3B,QAAMxB,OAAO,GAAGD,KAAK,CAClBuB,GADa,CACR,GAAErB,UAAW,OADL,EAEbU,IAFa,CAEPC,GAAD,IAASA,GAAG,CAACG,IAFL,CAAhB;AAIA,SAAO;AACLF,IAAAA,IAAI,EAAEf,YADD;AAELgB,IAAAA,OAAO,EAAEd;AAFJ,GAAP;AAID","sourcesContent":["import {TEAM_UPLOAD_SUCCESS,TEAM_UPLOAD_FAILURE,TEAM_MODIFY_SUCCESS,TEAM_MODIFY_FAILURE,TEAM_DELETE,GET_TEAM_DETAIL,GET_ALL_TEAM } from \"./types\";\r\nimport axios from \"axios\";\r\nimport {request} from \"../utils/axios\"\r\nimport { SERVER_API } from \"./config\";\r\n\r\n\r\n// 팀 생성\r\nexport const teamUpload = (datas) => (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"multipart/form-data\",\r\n    },\r\n  };\r\n  console.log(datas)\r\n  let result = axios\r\n    .post(`/team/create`, datas, config)\r\n    .then((res) => {\r\n      dispatch({ type: TEAM_UPLOAD_SUCCESS, payload: res.data });\r\n      return true;\r\n    })\r\n    .catch((err) => {\r\n      dispatch({ type: TEAM_UPLOAD_FAILURE, payload: err });\r\n      return false;\r\n    });\r\n  return result;\r\n};\r\n\r\n\r\n// 팀 수정\r\nexport function teamModify(dataTosubmit, idx) {\r\n  const data = request(\"post\", \"/team/update\", dataTosubmit);\r\n\r\n  return {\r\n    type : TEAM_MODIFY_FAILURE,\r\n    payload : data\r\n  }\r\n}\r\n\r\n\r\n// 팀 삭제\r\nexport const teamDelete = (idx) => {\r\n  const request = axios\r\n    .get(`${SERVER_API}/team/delete/${idx}`)\r\n    .then((res) => res.data);\r\n\r\n  return {\r\n    type: TEAM_DELETE,\r\n    payload: request,\r\n  };\r\n};\r\n\r\n\r\n//해당 팀의 디테일 정보받기\r\nexport function getTeamDetail(idx) {\r\n  const request = axios\r\n    .get(`${SERVER_API}/team/${idx}`)\r\n    .then((res) => res.data);\r\n\r\n  return {\r\n    type: GET_TEAM_DETAIL,\r\n    payload: request,\r\n  };\r\n}\r\n\r\n\r\n//모든 팀의 정보받기\r\nexport function getAllTeam() {\r\n  const request = axios\r\n    .get(`${SERVER_API}/team`)\r\n    .then((res) => res.data);\r\n\r\n  return {\r\n    type: GET_ALL_TEAM,\r\n    payload: request,\r\n  };\r\n}"]},"metadata":{},"sourceType":"module"}