{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\82104\\\\Desktop\\\\projectHub_front-main (2)\\\\projectHub_front-main\\\\src\\\\components\\\\views\\\\PostPage\\\\ReadPostingContent.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { Link, useParams } from 'react-router-dom';\nimport './ReadPostingContent.css';\nimport { request } from \"../../../utils/axios\";\nimport axios from 'axios';\nimport Cookies from 'universal-cookie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cookies = new Cookies();\n\nfunction GetPostingContent(idx) {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const [currentContent, setContent] = useState([]);\n  useEffect(async () => {\n    var response = await axios.get('http://3.21.104.168:8765/posting/' + idx);\n    setContent(response.data[0]);\n  }, [currentContent]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"title_txt\",\n        type: \"text\",\n        readOnly: true,\n        defaultValue: currentContent.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n      source: currentContent.content,\n      className: \"Readmarkdown\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 7\n  }, this);\n}\n\n_s(GetPostingContent, \"WPv5hyFk9WrwMZxBt16OtjydD5c=\");\n\n_c = GetPostingContent;\n\nfunction GetButtons(project_idx, content_idx) {\n  if (cookies.get(\"user\") !== undefined) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/project/\" + project_idx + \"/updateContent/\" + content_idx,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"\\uC218\\uC815\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 80\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/project/\" + project_idx + \"/read/\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: function () {\n            const response = request(\"get\", \"/posting/delete/\" + content_idx);\n            console.log(response);\n          }.bind(this),\n          children: \"\\uC0AD\\uC81C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 57\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  } else return;\n}\n\n_c2 = GetButtons;\n\nfunction ReadPostingContent() {\n  _s2();\n\n  const param = useParams();\n  const project_idx = param.project_idx;\n  const content_idx = param.content_idx;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [GetButtons(project_idx, content_idx), GetPostingContent(content_idx)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(ReadPostingContent, \"robhGa1ZC4zviMRLk6t/NW5RpXI=\", false, function () {\n  return [useParams];\n});\n\n_c3 = ReadPostingContent;\nexport default ReadPostingContent;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"GetPostingContent\");\n$RefreshReg$(_c2, \"GetButtons\");\n$RefreshReg$(_c3, \"ReadPostingContent\");","map":{"version":3,"sources":["C:/Users/82104/Desktop/projectHub_front-main (2)/projectHub_front-main/src/components/views/PostPage/ReadPostingContent.js"],"names":["React","useState","useEffect","ReactMarkdown","Link","useParams","request","axios","Cookies","cookies","GetPostingContent","idx","loading","setLoading","currentContent","setContent","response","get","data","title","content","GetButtons","project_idx","content_idx","undefined","console","log","bind","ReadPostingContent","param"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,SAAQC,IAAR,EAAcC,SAAd,QAA8B,kBAA9B;AACA,OAAO,0BAAP;AACA,SAAQC,OAAR,QAAsB,sBAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,kBAApB;;AAEA,MAAMC,OAAO,GAAG,IAAID,OAAJ,EAAhB;;AAEA,SAASE,iBAAT,CAA2BC,GAA3B,EAA+B;AAAA;;AAC7B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACa,cAAD,EAAgBC,UAAhB,IAA8Bd,QAAQ,CAAC,EAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,YAAW;AACjB,QAAIc,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAU,sCAAoCN,GAA9C,CAArB;AACAI,IAAAA,UAAU,CAACC,QAAQ,CAACE,IAAT,CAAc,CAAd,CAAD,CAAV;AACD,GAHM,EAGL,CAACJ,cAAD,CAHK,CAAT;AAKE,sBACE;AAAA,4BACI;AAAA,6BAAG;AAAO,QAAA,EAAE,EAAC,WAAV;AAAsB,QAAA,IAAI,EAAC,MAA3B;AAAkC,QAAA,QAAQ,MAA1C;AAA2C,QAAA,YAAY,EAAEA,cAAc,CAACK;AAAxE;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA,YADJ,eAEM,QAAC,aAAD;AAAe,MAAA,MAAM,EAAEL,cAAc,CAACM,OAAtC;AAA+C,MAAA,SAAS,EAAC;AAAzD;AAAA;AAAA;AAAA;AAAA,YAFN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMH;;GAfQV,iB;;KAAAA,iB;;AAiBT,SAASW,UAAT,CAAoBC,WAApB,EAAgCC,WAAhC,EAA4C;AAC1C,MAAGd,OAAO,CAACQ,GAAR,CAAY,MAAZ,MAAsBO,SAAzB,EAAmC;AACjC,wBACE;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAE,cAAcF,WAAd,GAA4B,iBAA5B,GAAgDC,WAA1D;AAAA,+BAAuE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAvE;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAE,cAAcD,WAAd,GAA4B,QAAtC;AAAA,+BAAgD;AAAQ,UAAA,OAAO,EAAE,YAAU;AACzE,kBAAMN,QAAQ,GAAGV,OAAO,CAAC,KAAD,EAAQ,qBAAqBiB,WAA7B,CAAxB;AACAE,YAAAA,OAAO,CAACC,GAAR,CAAYV,QAAZ;AACD,WAHgE,CAG/DW,IAH+D,CAG1D,IAH0D,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAhD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AASD,GAVD,MAWK;AACN;;MAbQN,U;;AAiBT,SAASO,kBAAT,GAA8B;AAAA;;AAC5B,QAAMC,KAAK,GAAGxB,SAAS,EAAvB;AACA,QAAMiB,WAAW,GAAGO,KAAK,CAACP,WAA1B;AACA,QAAMC,WAAW,GAAGM,KAAK,CAACN,WAA1B;AAEA,sBACE;AAAA,eACGF,UAAU,CAACC,WAAD,EAAaC,WAAb,CADb,EAEGb,iBAAiB,CAACa,WAAD,CAFpB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;IAXQK,kB;UACOvB,S;;;MADPuB,kB;AAaT,eAAeA,kBAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport ReactMarkdown from 'react-markdown';\nimport {Link, useParams} from 'react-router-dom';\nimport './ReadPostingContent.css';\nimport {request} from \"../../../utils/axios\"\nimport axios from 'axios';\nimport Cookies from 'universal-cookie';\n\nconst cookies = new Cookies();\n\nfunction GetPostingContent(idx){\n  const [loading, setLoading] = useState(true);\n  const [currentContent,setContent] = useState([]);\n\n  useEffect(async() => {\n      var response = await axios.get('http://3.21.104.168:8765/posting/'+idx);\n      setContent(response.data[0]);\n    },[currentContent]);\n\n    return (\n      <div>\n          <p><input id='title_txt' type=\"text\" readOnly defaultValue={currentContent.title}></input></p>\n            <ReactMarkdown source={currentContent.content} className='Readmarkdown'/>\n      </div>\n    )\n}\n\nfunction GetButtons(project_idx,content_idx){\n  if(cookies.get(\"user\")!==undefined){\n    return(\n      <div>\n        <Link to={\"/project/\" + project_idx + \"/updateContent/\" + content_idx}><button>수정</button></Link>\n        <Link to={\"/project/\" + project_idx + \"/read/\"}><button onClick={function(){\n          const response = request(\"get\", \"/posting/delete/\" + content_idx);\n          console.log(response);\n        }.bind(this)}>삭제</button></Link>\n      </div>\n    )\n  }\n  else return;\n}\n\n\n\nfunction ReadPostingContent() {\n  const param = useParams();\n  const project_idx = param.project_idx;\n  const content_idx = param.content_idx;\n\n  return(\n    <div>\n      {GetButtons(project_idx,content_idx)}\n      {GetPostingContent(content_idx)}\n    </div>\n  )\n}\n\nexport default ReadPostingContent;"]},"metadata":{},"sourceType":"module"}