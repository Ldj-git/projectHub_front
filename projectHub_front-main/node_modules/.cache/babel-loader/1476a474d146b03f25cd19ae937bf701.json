{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\82104\\\\Desktop\\\\projectHub_front-main (2)\\\\projectHub_front-main\\\\src\\\\components\\\\views\\\\ProjectPage\\\\ProjectMainPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { getAllProject } from \"../../../_actions/projectAction\";\nimport { Link } from \"react-router-dom\";\nimport { MdAdd } from \"react-icons/md\";\nimport \"./ProjectMainPage.css\";\nimport Project from \"./Project\";\nimport MainNavBar from \"../../Parts/NavBar/MainNavBar\";\nimport Cookies from 'universal-cookie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cookies = new Cookies();\n\nfunction ProjectMainPage() {\n  _s();\n\n  // 프로젝트 카테고리 눌렀을 때 나오는 화면\n  const dispatch = useDispatch();\n  const [Projects, setProjects] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    setLoading(true);\n    dispatch(getAllProject()).then(res => {\n      setProjects(res.payload);\n    });\n    setLoading(false);\n  }, []); //로그인 안되있으면 글쓰기 버튼 안보이게\n\n  var status = null;\n\n  if (cookies.get(\"user\") !== undefined) {\n    status = /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/project/write\",\n      className: \"write\",\n      children: /*#__PURE__*/_jsxDEV(MdAdd, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(MainNavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      align: \"center\",\n      children: \"Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), status, /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          border: \"1\",\n          className: \"mainTable\",\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            align: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              align: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                width: \"50px\",\n                children: \"ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                width: \"200px\",\n                children: \"Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                width: \"100px\",\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                width: \"150px\",\n                children: \"Members\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                width: \"210px\",\n                children: \"Upload Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this), Projects.map(project => /*#__PURE__*/_jsxDEV(Project, {\n              idx: project.idx,\n              title: project.title,\n              name: project.name,\n              members: project.members,\n              addDate: project.addDate\n            }, project.idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProjectMainPage, \"Gp4aV3pVZ0OSeCCJb90DwCTkwm4=\", false, function () {\n  return [useDispatch];\n});\n\n_c = ProjectMainPage;\nexport default ProjectMainPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectMainPage\");","map":{"version":3,"sources":["C:/Users/82104/Desktop/projectHub_front-main (2)/projectHub_front-main/src/components/views/ProjectPage/ProjectMainPage.js"],"names":["React","useEffect","useState","useDispatch","getAllProject","Link","MdAdd","Project","MainNavBar","Cookies","cookies","ProjectMainPage","dispatch","Projects","setProjects","loading","setLoading","then","res","payload","status","get","undefined","map","project","idx","title","name","members","addDate"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { getAllProject } from \"../../../_actions/projectAction\";\nimport { Link } from \"react-router-dom\";\nimport { MdAdd } from \"react-icons/md\";\nimport \"./ProjectMainPage.css\";\nimport Project from \"./Project\";\nimport MainNavBar from \"../../Parts/NavBar/MainNavBar\";\nimport Cookies from 'universal-cookie';\n\nconst cookies = new Cookies();\n\nfunction ProjectMainPage() {\n  // 프로젝트 카테고리 눌렀을 때 나오는 화면\n  const dispatch = useDispatch();\n\n  const [Projects, setProjects] = useState([]);\n\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    setLoading(true);\n    dispatch(getAllProject()).then((res) => {\n      setProjects(res.payload);\n    });\n    setLoading(false);\n  }, []);\n\n  //로그인 안되있으면 글쓰기 버튼 안보이게\n  var status = null;\n  if(cookies.get(\"user\")!==undefined){\n    status=<Link to=\"/project/write\" className=\"write\">\n    <MdAdd />\n  </Link>\n  }\n  return (\n    <main>\n      <MainNavBar />\n      <br />\n      <br />\n      <h2 align=\"center\">Projects</h2>\n      {status}\n      \n      <div>\n        <div>\n          <table border=\"1\" className=\"mainTable\">\n            <tbody align=\"center\">\n              <tr align=\"center\">\n                <td width=\"50px\">ID</td>\n                <td width=\"200px\">Title</td>\n                <td width=\"100px\">Name</td>\n                <td width=\"150px\">Members</td>\n                <td width=\"210px\">Upload Date</td>\n              </tr>\n              {Projects.map((project) => (\n                <Project\n                  key={project.idx}\n                  idx={project.idx}\n                  title={project.title}\n                  name={project.name}\n                  members={project.members}\n                  addDate={project.addDate}\n                />\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </main>\n  );\n}\n\nexport default ProjectMainPage;\n"]},"metadata":{},"sourceType":"module"}