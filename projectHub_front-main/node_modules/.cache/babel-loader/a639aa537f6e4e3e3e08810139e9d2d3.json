{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ldj\\\\Desktop\\\\fronttest\\\\src\\\\components\\\\views\\\\RegisterPage\\\\RegisterPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { registerUser } from \"../../../_actions/userAction\";\nimport NavBar from \"../../Parts/NavBar/MainNavBar\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RegisterPage(props) {\n  _s();\n\n  const [Name, setName] = useState(\"\");\n  const [Id, setId] = useState(\"\");\n  const [Password, setPassword] = useState(\"\");\n  const [PasswordChecked, setPasswordChecked] = useState(\"\");\n  const dispatch = useDispatch();\n  const [idAccept, setIdAccept] = useState(0);\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n\n    if (idAccept === false) {\n      alert(\"아이디 중복확인을 해주세요\");\n    } else if (Password === PasswordChecked) {\n      let body = {\n        id: Id,\n        name: Name,\n        pwd: Password\n      };\n      dispatch(registerUser(body)).then(res => {\n        if (res.payload.registerSuccess) {\n          alert(\"가입이 정상적으로 완료되었습니다\");\n          props.history.push(\"/login\");\n        }\n      });\n    } else {\n      alert(\"비밀번호가 일치하지 않습니다\");\n    }\n  };\n\n  const checkID = e => {\n    e.preventDefault();\n    const data = {\n      id: Id\n    };\n    fetch('/register/checkid', {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    }).then(res => res.json()).then(json => {\n      if (json.IdExist === false) {\n        alert(\"사용가능한 ID입니다\");\n        setIdAccept(true);\n      } else {\n        alert(\"이미 사용중인 아이디입니다. 다른 아이디를 입력해주세요.\");\n        setIdAccept(false);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: '100%',\n        height: '100vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: onSubmitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          size: \"lg\",\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"\\uC774\\uB984\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            autoFocus: true,\n            type: \"\",\n            value: Name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          size: \"lg\",\n          controlId: \"id\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            autoFocus: true,\n            type: \"id\",\n            value: Id,\n            onChange: e => setId(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: checkID,\n            ml: \"30\",\n            children: \"\\uC911\\uBCF5\\uD655\\uC778\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          size: \"lg\",\n          controlId: \"password\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            value: Password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          size: \"lg\",\n          controlId: \"password\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password Recheck\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            value: PasswordChecked,\n            onChange: e => setPasswordChecked(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"\\uD68C\\uC6D0 \\uAC00\\uC785\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 7\n  }, this);\n}\n\n_s(RegisterPage, \"GZfxGJ8IMWlbIu5F3+jFUblcEO4=\", false, function () {\n  return [useDispatch];\n});\n\n_c = RegisterPage;\nexport default _c2 = withRouter(RegisterPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RegisterPage\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/Ldj/Desktop/fronttest/src/components/views/RegisterPage/RegisterPage.js"],"names":["React","useState","withRouter","useDispatch","registerUser","NavBar","Form","Button","RegisterPage","props","Name","setName","Id","setId","Password","setPassword","PasswordChecked","setPasswordChecked","dispatch","idAccept","setIdAccept","onSubmitHandler","e","preventDefault","alert","body","id","name","pwd","then","res","payload","registerSuccess","history","push","checkID","data","fetch","method","headers","JSON","stringify","json","IdExist","display","justifyContent","alignItems","width","height","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\nimport { withRouter } from \"react-router-dom\"; \r\nimport { useDispatch } from \"react-redux\";\r\nimport { registerUser } from \"../../../_actions/userAction\";\r\nimport NavBar from \"../../Parts/NavBar/MainNavBar\"\r\nimport Form from \"react-bootstrap/Form\"\r\nimport Button from \"react-bootstrap/Button\"\r\n\r\nfunction RegisterPage(props) {\r\n\r\n    const[Name, setName]= useState(\"\")\r\n    const[Id, setId]= useState(\"\")\r\n    const[Password, setPassword]= useState(\"\")\r\n    const[PasswordChecked, setPasswordChecked]= useState(\"\")\r\n    const dispatch = useDispatch();\r\n    const [idAccept, setIdAccept] = useState(0);\r\n\r\n    const onSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        if(idAccept === false){\r\n          alert(\"아이디 중복확인을 해주세요\");\r\n        }\r\n        else if (Password === PasswordChecked) {\r\n            let body = {\r\n              id :  Id,\r\n              name: Name,\r\n              pwd : Password,\r\n            };\r\n            dispatch(registerUser(body)).then((res) => {\r\n              if(res.payload.registerSuccess){\r\n                alert(\"가입이 정상적으로 완료되었습니다\");\r\n                props.history.push(\"/login\");\r\n              }\r\n            });\r\n          } else {\r\n            alert(\"비밀번호가 일치하지 않습니다\");\r\n          }\r\n      };\r\n\r\n\r\n      const checkID=(e)=>{      \r\n        e.preventDefault();\r\n        const data = {\r\n            id: Id   \r\n        }\r\n\r\n        fetch('/register/checkid',{ \r\n            method:\"post\",\r\n            headers: { \"Content-Type\":  \"application/json\" }, \r\n            body: JSON.stringify(data),   \r\n        })\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            if(json.IdExist === false){   \r\n                alert(\"사용가능한 ID입니다\"); \r\n                setIdAccept(true);\r\n            }\r\n            else{\r\n                alert(\"이미 사용중인 아이디입니다. 다른 아이디를 입력해주세요.\");\r\n                setIdAccept(false);\r\n            }\r\n        });\r\n    };\r\n\r\n\r\n    return (\r\n      <span>\r\n        <NavBar />\r\n\r\n        <div style={{\r\n          display:'flex', justifyContent:'center', alignItems:'center'\r\n          , width:'100%', height:'100vh'\r\n        }}>\r\n        <Form onSubmit={onSubmitHandler}>\r\n        <Form.Group size=\"lg\" controlId=\"name\">\r\n            <Form.Label>이름</Form.Label>\r\n            <Form.Control\r\n              autoFocus\r\n              type=\"\"\r\n              value={Name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group size=\"lg\" controlId=\"id\">\r\n            <Form.Label>ID</Form.Label>\r\n            <Form.Control\r\n              autoFocus\r\n              type=\"id\"\r\n              value={Id}\r\n              onChange={(e) => setId(e.target.value)}\r\n            />\r\n            <br />\r\n            <Button onClick={checkID} ml=\"30\">중복확인</Button>\r\n          </Form.Group>\r\n\r\n          <Form.Group size=\"lg\" controlId=\"password\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              value={Password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group size=\"lg\" controlId=\"password\">\r\n            <Form.Label>Password Recheck</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              value={PasswordChecked}\r\n              onChange={(e) => setPasswordChecked(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n      <Button type=\"submit\">회원 가입</Button >\r\n    </Form>\r\n    </div>\r\n    </span>\r\n    )\r\n}\r\n\r\nexport default withRouter(RegisterPage);"]},"metadata":{},"sourceType":"module"}